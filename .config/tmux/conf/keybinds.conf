# -- prefix
unbind C-b

# Allows us to use C-a a <command> to send commands to a TMUX session inside
set -g prefix C-a

# another TMUX session
bind-key a send-prefix

# reload configuration
bind r source-file "$tmux_dir/tmux.conf" \; display 'tmux.conf sourced'

# create new session
bind M-s new-session

# kill a session, suggest not to be use this keybind
bind M-q kill-session

# Select previous session
bind M-p switch-client -p

# Select next session
bind M-n switch-client -n

# chose-tree
bind M-t choose-tree -Zs

# break pane
bind O break-pane

# kill a window
bind x kill-window

# switch to last window
# bind Tab last-window

# bind -r indicator multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds
bind -r o previous-window
bind -r h next-window

# display panes numbers
bind a display-panes

bind -r Space next-layout

unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
unbind 0

# select windows
bind M-1 select-window -t 1
bind M-2 select-window -t 2
bind M-3 select-window -t 3
bind M-4 select-window -t 4
bind M-5 select-window -t 5
bind M-6 select-window -t 6
bind M-7 select-window -t 7
bind M-8 select-window -t 8
bind M-9 select-window -t 9

bind M-! join-pane -t :1
bind M-@ join-pane -t :2
bind 'M-#' join-pane -t :3
bind 'M-$' join-pane -t :4
bind M-% join-pane -t :5
bind M-^ join-pane -t :6
bind M-& join-pane -t :7
bind M-* join-pane -t :8
bind M-( join-pane -t :9


# split
bind u split-window -vb -c "#{pane_current_path}"
bind e split-window -v -c "#{pane_current_path}"
bind n split-window -hb -c "#{pane_current_path}"
bind i split-window -h -c "#{pane_current_path}"

# kill a pane
bind q kill-pane

# toggle pane full window
bind f resize-pane -Z

# pane navigation
bind 1 select-pane -t:.1
bind 2 select-pane -t:.2
bind 3 select-pane -t:.3
bind 4 select-pane -t:.4
bind 5 select-pane -t:.5
bind 6 select-pane -t:.6
bind 7 select-pane -t:.7
bind 8 select-pane -t:.8
bind 9 select-pane -t:.9
bind 0 select-pane -t:.10
bind > swap-pane -D
bind < swap-pane -U
bind | swap-pane


# bind t choose-tree -Zw
# bind C-o last-window
bind S choose-tree 'move-pane -v -s "%%"'
bind V choose-tree 'move-pane -h -s "%%"'

# find session
bind M-s command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind BTab switch-client -l  # move to last session

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# Copy mode
set -g status-keys emacs
set -g mode-keys vi

bind Enter copy-mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi n send-keys -X cursor-left
bind -T copy-mode-vi i send-keys -X cursor-right
bind -T copy-mode-vi u send-keys -X cursor-up
bind -T copy-mode-vi e send-keys -X cursor-down
bind -T copy-mode-vi h send-keys -X next-word-end
bind -T copy-mode-vi U send-keys -N 5 -X cursor-up
bind -T copy-mode-vi E send-keys -N 5 -X cursor-down
bind -T copy-mode-vi N send-keys -X start-of-line
bind -T copy-mode-vi I send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

bind b list-buffers
bind p paste-buffer
bind P choose-buffer

# -- toggle_syn_input
bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
'setw synchronize-panes on; set -g pane-border-style fg=red'

# -- toggle_status
bind t if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'

# Tmux doesn't pass <S-CR> codes to Neovim
# https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
bind -n S-Enter send-keys Escape "[13;2u"

# vim tmux navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-n if-shell "$is_vim" 'send-keys C-n'  'select-pane -L'
bind-key -n C-e if-shell "$is_vim" 'send-keys C-e'  'select-pane -D'
bind-key -n C-u if-shell "$is_vim" 'send-keys C-u'  'select-pane -U'
bind-key -n C-i if-shell "$is_vim" 'send-keys C-i'  'select-pane -R'

bind-key -n C-Left if-shell "$is_vim" 'send-keys C-Left' 'resize-pane -L 3'
bind-key -n C-Down if-shell "$is_vim" 'send-keys C-Down' 'resize-pane -D 3'
bind-key -n C-Up if-shell "$is_vim" 'send-keys C-Up' 'resize-pane -U 3'
bind-key -n C-Right if-shell "$is_vim" 'send-keys C-Right' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-n' select-pane -L
bind-key -T copy-mode-vi 'C-e' select-pane -D
bind-key -T copy-mode-vi 'C-u' select-pane -U
bind-key -T copy-mode-vi 'C-i' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
